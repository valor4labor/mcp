{
  "name": "mcp__tavily_search",
  "description": "Uses Tavily search API to find relevant information on the web about a given query",
  "path": "/mcp",
  "method": "POST",
  "version": "1.0.0",
  "input_schema": {
    "type": "object",
    "properties": {
      "query": {
        "type": "string",
        "description": "The search query to look up information about"
      },
      "max_results": {
        "type": "integer",
        "description": "Maximum number of search results to return",
        "default": 10,
        "minimum": 1,
        "maximum": 20
      },
      "search_depth": {
        "type": "string",
        "description": "The depth of the search, either 'basic' (faster) or 'advanced' (more thorough)",
        "enum": ["basic", "advanced"],
        "default": "basic"
      }
    },
    "required": ["query"]
  },
  "output_schema": {
    "type": "object",
    "properties": {
      "results": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title of the search result"
            },
            "url": {
              "type": "string",
              "description": "URL of the search result"
            },
            "content": {
              "type": "string",
              "description": "Content extract from the search result"
            },
            "score": {
              "type": "number",
              "description": "Relevance score of the result"
            }
          }
        }
      },
      "query": {
        "type": "string",
        "description": "The original search query"
      },
      "count": {
        "type": "integer",
        "description": "Number of results returned"
      },
      "search_depth": {
        "type": "string",
        "description": "The depth of search that was used"
      }
    }
  },
  "usage_guidelines": {
    "when_to_use": [
      "When you need to find factual information about a topic",
      "When you need up-to-date information that might be beyond your knowledge cutoff",
      "When you need to verify claims or find references to support your response",
      "When you need to research specific topics, people, events, or concepts"
    ],
    "when_not_to_use": [
      "When the user is asking about sensitive, illegal, or harmful topics",
      "When the user's query contains personal or private information",
      "When you already know the answer with high confidence",
      "When the search would reveal private or confidential information"
    ],
    "examples": [
      "Query: 'latest AI research in 2025'",
      "Query: 'population of Tokyo'",
      "Query: 'who is the current CEO of Apple'",
      "Query: 'python asyncio best practices'"
    ]
  },
  "error_handling": {
    "400": "Bad request - The request was malformed or missing required parameters",
    "401": "Unauthorized - API key is missing or invalid",
    "429": "Too Many Requests - Rate limit exceeded",
    "500": "Internal Server Error - Something went wrong on the server side"
  },
  "authentication": {
    "type": "api_key",
    "location": "env_var",
    "name": "TAVILY_API_KEY"
  },
  "rate_limits": {
    "requests_per_minute": 60,
    "requests_per_day": 10000,
    "note": "These are approximate limits and may vary based on your Tavily API plan"
  },
  "localhost_setup": {
    "default_port": 5000,
    "setup_instructions": "1. Install Python and uv package manager\n2. Set TAVILY_API_KEY environment variable\n3. Run tavily_mcp.py script\n4. Test with 'curl http://localhost:5000/health'"
  }
}